{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LoginComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\");\n    i0.ɵɵtext(2, \"Email is required!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\", 9);\n    i0.ɵɵtext(2, \"Invalid email format!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_15_div_1_Template, 3, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, LoginComponent_div_15_div_2_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\");\n    i0.ɵɵtext(2, \"Password is required!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_20_div_1_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSumit\"], [\"align\", \"center\", 1, \"login\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"box\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"box\"], [\"id\", \"submit\", \"type\", \"submit\", \"value\", \"SUBMIT\", 3, \"disabled\"], [\"id\", \"ermsg\", 4, \"ngIf\"], [\"id\", \"ermsg\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \" Login to MVP Infotec Pvt Ltd.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\")(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSumit\", function LoginComponent_Template_form_ngSumit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\")(8, \"h2\");\n      i0.ɵɵtext(9, \"MVP INFOTECH PVT. LTD.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\")(11, \"div\")(12, \"label\", 2);\n      i0.ɵɵtext(13, \"Email ID :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 3);\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 3, 2, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\")(17, \"label\", 5);\n      i0.ɵɵtext(18, \"Password :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵelement(22, \"input\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%], .login[_ngcontent-%COMP%]{\\n    align-items: center;\\n    border: 0;\\n    \\n}\\n.login[_ngcontent-%COMP%]{\\n    margin-top: 5%;\\nborder: 0px solid; \\nmargin-left: 30%; \\nmargin-right: 30%; \\nbackground-color: rgb(242, 196, 111); \\npadding: 2% 20px; \\nfont-size: larger;\\n}\\n.box[_ngcontent-%COMP%]{\\n font-family:'Courier New', Courier, monospace;\\n letter-spacing: 1px; \\n}\\n#submit[_ngcontent-%COMP%]{\\nfloat: left;\\nbackground-color: rgb(242, 196, 111);\\n font-style: oblique; \\n font-weight: bolder;\\n margin-left: 30%;\\n width: 40%;\\n height: 8%;\\n border:0px solid;\\n cursor: pointer;\\n padding: 1%;\\n}\\n#submit[_ngcontent-%COMP%]:disabled:hover{\\n    background-color: rgb(242, 196, 111);\\n    color:rgba(128, 128, 128, 0.683);\\n}\\n#submit[_ngcontent-%COMP%]:hover{\\ncolor: green;\\nbackground-color: orange;\\n}\\n#ermsg[_ngcontent-%COMP%]{\\n    color: red;\\n    font-size:xx-small;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixTQUFTOztBQUViO0FBQ0E7SUFDSSxjQUFjO0FBQ2xCLGlCQUFpQjtBQUNqQixnQkFBZ0I7QUFDaEIsaUJBQWlCO0FBQ2pCLG9DQUFvQztBQUNwQyxnQkFBZ0I7QUFDaEIsaUJBQWlCO0FBQ2pCO0FBQ0E7Q0FDQyw2Q0FBNkM7Q0FDN0MsbUJBQW1CO0FBQ3BCO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsb0NBQW9DO0NBQ25DLG1CQUFtQjtDQUNuQixtQkFBbUI7Q0FDbkIsZ0JBQWdCO0NBQ2hCLFVBQVU7Q0FDVixVQUFVO0NBQ1YsZ0JBQWdCO0NBQ2hCLGVBQWU7Q0FDZixXQUFXO0FBQ1o7QUFDQTtJQUNJLG9DQUFvQztJQUNwQyxnQ0FBZ0M7QUFDcEM7QUFDQTtBQUNBLFlBQVk7QUFDWix3QkFBd0I7QUFDeEI7QUFDQTtJQUNJLFVBQVU7SUFDVixrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5ICwgLmxvZ2lue1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIFxyXG59XHJcbi5sb2dpbntcclxuICAgIG1hcmdpbi10b3A6IDUlO1xyXG5ib3JkZXI6IDBweCBzb2xpZDsgXHJcbm1hcmdpbi1sZWZ0OiAzMCU7IFxyXG5tYXJnaW4tcmlnaHQ6IDMwJTsgXHJcbmJhY2tncm91bmQtY29sb3I6IHJnYigyNDIsIDE5NiwgMTExKTsgXHJcbnBhZGRpbmc6IDIlIDIwcHg7IFxyXG5mb250LXNpemU6IGxhcmdlcjtcclxufVxyXG4uYm94e1xyXG4gZm9udC1mYW1pbHk6J0NvdXJpZXIgTmV3JywgQ291cmllciwgbW9ub3NwYWNlO1xyXG4gbGV0dGVyLXNwYWNpbmc6IDFweDsgXHJcbn1cclxuI3N1Ym1pdHtcclxuZmxvYXQ6IGxlZnQ7XHJcbmJhY2tncm91bmQtY29sb3I6IHJnYigyNDIsIDE5NiwgMTExKTtcclxuIGZvbnQtc3R5bGU6IG9ibGlxdWU7IFxyXG4gZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuIG1hcmdpbi1sZWZ0OiAzMCU7XHJcbiB3aWR0aDogNDAlO1xyXG4gaGVpZ2h0OiA4JTtcclxuIGJvcmRlcjowcHggc29saWQ7XHJcbiBjdXJzb3I6IHBvaW50ZXI7XHJcbiBwYWRkaW5nOiAxJTtcclxufVxyXG4jc3VibWl0OmRpc2FibGVkOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MiwgMTk2LCAxMTEpO1xyXG4gICAgY29sb3I6cmdiYSgxMjgsIDEyOCwgMTI4LCAwLjY4Myk7XHJcbn1cclxuI3N1Ym1pdDpob3ZlcntcclxuY29sb3I6IGdyZWVuO1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XHJcbn1cclxuI2VybXNne1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTp4eC1zbWFsbDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_15_div_1_Template","LoginComponent_div_15_div_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","loginForm","get","errors","tmp_1_0","LoginComponent_div_20_div_1_Template","ctx_r1","LoginComponent","ngOnInit","email","required","password","onSubmit","valid","console","log","value","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSumit_5_listener","ɵɵelement","LoginComponent_div_15_Template","LoginComponent_div_20_Template","invalid","touched","tmp_2_0"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.ts","C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  loginForm!: FormGroup;\n  ngOnInit(){\n    this.loginForm = new FormGroup({\n    email: new FormControl('',[Validators.required,Validators.email]),\n    password: new FormControl('',Validators.required)\n  });\n}\nonSubmit(){\n  if(this.loginForm.valid)\n  {\n    console.log(this.loginForm.value);\n  }\n}\n}","<html>\n<head> <title> Login to MVP Infotec Pvt Ltd.</title></head>\n<body><form [formGroup]=\"loginForm\" (ngSumit)=\"onSubmit()\">\n    <div class=\"login\" align=\"center\">\n    <div><h2>MVP INFOTECH PVT. LTD.</h2>\n    <div>\n    <div><label for=\"email\">Email ID :</label>  <input type =\"email\" formControlName=\"email\" class=\"box\" placeholder=\"Email\">\n    <div *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n        <div id=\"ermsg\" *ngIf=\"loginForm.get('email')?.errors?.['required']\"><span>Email is required!</span></div>\n        <div id=\"ermsg\" *ngIf=\"loginForm.get('email')?.errors?.['email']\"><span id=\"ermsg\">Invalid email format!</span></div>\n    </div></div>\n    <div><label for=\"password\">Password :</label> <input type=\"password\" formControlName=\"password\" class=\"box\" placeholder=\"Password\">\n    <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n        <div id=\"ermsg\" *ngIf=\"loginForm.get('password')?.errors?.['required']\"><span>Password is required!</span></div>\n    </div></div>\n    </div>\n    </div>\n    </div>\n    <div><input id=\"submit\" type=\"submit\" value=\"SUBMIT\" [disabled]=\"loginForm.invalid\"></div>\n    </form>\n</body>\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}