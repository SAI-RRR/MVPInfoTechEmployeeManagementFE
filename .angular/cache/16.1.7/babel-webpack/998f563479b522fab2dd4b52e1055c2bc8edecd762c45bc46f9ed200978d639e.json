{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  getemployeeById(id) {\n    throw new Error('Method not implemented.');\n  }\n  getEmployeeById(id) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/employee\";\n  }\n  getEmployeeList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  addEmployee(employee) {\n    return this.httpClient.post(`${this.baseURL}`, employee);\n  }\n  updateEmployeeById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateEmployee(id, employee) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EmployeeService","getemployeeById","id","Error","getEmployeeById","constructor","httpClient","baseURL","getEmployeeList","get","addEmployee","employee","post","updateEmployeeById","updateEmployee","put","deleteEmployee","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\MVP\\src\\app\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  [x: string]: any;\n  getemployeeById(id: number) {\n    throw new Error('Method not implemented.');\n  }\n  getEmployeeById(id: number) {\n    throw new Error('Method not implemented.');\n  }\n  \n  private baseURL = \"http://localhost:8080/api/v1/employee\";\n\n  constructor(private httpClient:HttpClient) { }\n  \n  getEmployeeList():Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}`);\n  }\n  addEmployee(employee:Employee): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`,employee);\n  }\n\n  updateEmployeeById(id:number):Observable<Employee>{\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n  }\n  updateEmployee(id:number,employee:Employee):Observable<object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`,employee);\n  }\n  deleteEmployee(id:number): Observable<object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n\n\n \n}\n\n"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAE1BC,eAAeA,CAACC,EAAU;IACxB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,eAAeA,CAACF,EAAU;IACxB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAIAE,YAAoBC,UAAqB;IAArB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,uCAAuC;EAEZ;EAE7CC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC3D;EACAG,WAAWA,CAACC,QAAiB;IAC3B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAACI,QAAQ,CAAC;EACzD;EAEAE,kBAAkBA,CAACX,EAAS;IAC1B,OAAO,IAAI,CAACI,UAAU,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAIL,EAAE,EAAE,CAAC;EAC/D;EACAY,cAAcA,CAACZ,EAAS,EAACS,QAAiB;IACxC,OAAO,IAAI,CAACL,UAAU,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIL,EAAE,EAAE,EAACS,QAAQ,CAAC;EAC9D;EACAK,cAAcA,CAACd,EAAS;IACtB,OAAO,IAAI,CAACI,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIL,EAAE,EAAE,CAAC;EACxD;;AA5BWF,eAAe,C;mBAAfA,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfrB,eAAe,C;SAAfA,eAAe;EAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}