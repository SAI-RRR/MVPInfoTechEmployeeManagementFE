{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LoginComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_15_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, LoginComponent_div_15_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_20_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSumit\"], [\"align\", \"center\", 1, \"login\"], [\"id\", \"text\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"box\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"box\"], [\"id\", \"submit\", \"type\", \"submit\", \"value\", \"SUBMIT\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \" Login to MVP Infotec Pvt Ltd.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\")(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSumit\", function LoginComponent_Template_form_ngSumit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"h2\");\n      i0.ɵɵtext(9, \"MVP INFOTECH PVT. LTD.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\")(11, \"p\")(12, \"label\", 3);\n      i0.ɵɵtext(13, \"Email ID :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementStart(16, \"p\")(17, \"label\", 6);\n      i0.ɵɵtext(18, \"Password :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵelement(22, \"input\", 8);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"body[_ngcontent-%COMP%], .login[_ngcontent-%COMP%]{\\n    align-items: center;\\n    border: 0;\\n    \\n}\\n.login[_ngcontent-%COMP%]{\\nborder: 0px solid; \\nmargin-left: 30%; \\nmargin-right: 30%; \\nbackground-color: rgb(242, 196, 111); \\npadding: 5% 20px; \\nfont-size: larger;\\n}\\n.box[_ngcontent-%COMP%]{\\n font-family:'Courier New', Courier, monospace;\\n letter-spacing: 1px; \\n}\\n#submit[_ngcontent-%COMP%]{\\nfloat: left;\\nbackground-color: rgb(242, 196, 111);\\n font-style: oblique; \\n font-weight: bolder;\\n margin-left: 30%;\\n width: 40%;\\n height: 8%;\\n border:0px solid;\\n cursor: pointer;\\n padding: 1%;\\n}\\n#submit[_ngcontent-%COMP%]:disabled{\\n    display: none;\\n}\\n#submit[_ngcontent-%COMP%]:hover{\\ncolor: green;\\nbackground-color: orange;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixTQUFTOztBQUViO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsZ0JBQWdCO0FBQ2hCLGlCQUFpQjtBQUNqQixvQ0FBb0M7QUFDcEMsZ0JBQWdCO0FBQ2hCLGlCQUFpQjtBQUNqQjtBQUNBO0NBQ0MsNkNBQTZDO0NBQzdDLG1CQUFtQjtBQUNwQjtBQUNBO0FBQ0EsV0FBVztBQUNYLG9DQUFvQztDQUNuQyxtQkFBbUI7Q0FDbkIsbUJBQW1CO0NBQ25CLGdCQUFnQjtDQUNoQixVQUFVO0NBQ1YsVUFBVTtDQUNWLGdCQUFnQjtDQUNoQixlQUFlO0NBQ2YsV0FBVztBQUNaO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7QUFDQSxZQUFZO0FBQ1osd0JBQXdCO0FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSAsIC5sb2dpbntcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBcclxufVxyXG4ubG9naW57XHJcbmJvcmRlcjogMHB4IHNvbGlkOyBcclxubWFyZ2luLWxlZnQ6IDMwJTsgXHJcbm1hcmdpbi1yaWdodDogMzAlOyBcclxuYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MiwgMTk2LCAxMTEpOyBcclxucGFkZGluZzogNSUgMjBweDsgXHJcbmZvbnQtc2l6ZTogbGFyZ2VyO1xyXG59XHJcbi5ib3h7XHJcbiBmb250LWZhbWlseTonQ291cmllciBOZXcnLCBDb3VyaWVyLCBtb25vc3BhY2U7XHJcbiBsZXR0ZXItc3BhY2luZzogMXB4OyBcclxufVxyXG4jc3VibWl0e1xyXG5mbG9hdDogbGVmdDtcclxuYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MiwgMTk2LCAxMTEpO1xyXG4gZm9udC1zdHlsZTogb2JsaXF1ZTsgXHJcbiBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gbWFyZ2luLWxlZnQ6IDMwJTtcclxuIHdpZHRoOiA0MCU7XHJcbiBoZWlnaHQ6IDglO1xyXG4gYm9yZGVyOjBweCBzb2xpZDtcclxuIGN1cnNvcjogcG9pbnRlcjtcclxuIHBhZGRpbmc6IDElO1xyXG59XHJcbiNzdWJtaXQ6ZGlzYWJsZWR7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiNzdWJtaXQ6aG92ZXJ7XHJcbmNvbG9yOiBncmVlbjtcclxuYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_15_div_1_Template","LoginComponent_div_15_div_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","loginForm","get","errors","tmp_1_0","LoginComponent_div_20_div_1_Template","ctx_r1","LoginComponent","ngOnInit","email","required","password","onSubmit","valid","console","log","value","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSumit_5_listener","ɵɵelement","LoginComponent_div_15_Template","LoginComponent_div_20_Template","invalid","touched","tmp_2_0"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.ts","C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  loginForm!: FormGroup;\n  ngOnInit(){\n    this.loginForm = new FormGroup({\n    email: new FormControl('',[Validators.required,Validators.email]),\n    password: new FormControl('',Validators.required)\n  });\n}\nonSubmit(){\n  if(this.loginForm.valid)\n  {\n    console.log(this.loginForm.value);\n  }\n}\n}","<html>\n<head> <title> Login to MVP Infotec Pvt Ltd.</title></head>\n<body><form [formGroup]=\"loginForm\" (ngSumit)=\"onSubmit()\">\n    <div class=\"login\" align=\"center\">\n    <div id=\"text\"><h2>MVP INFOTECH PVT. LTD.</h2>\n    <div>\n    <p><label for=\"email\">Email ID :</label>  <input type =\"email\" formControlName=\"email\" class=\"box\" placeholder=\"Email\"></p>\n    <div *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n        <div *ngIf=\"loginForm.get('email')?.errors?.['required']\">Email is required</div>\n        <div *ngIf=\"loginForm.get('email')?.errors?.['email']\">Invalid email format</div>\n    </div>\n    <p><label for=\"password\">Password :</label> <input type=\"password\" formControlName=\"password\" class=\"box\" placeholder=\"Password\"></p>\n    <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n        <div *ngIf=\"loginForm.get('password')?.errors?.['required']\">Password is required</div>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div><input id=\"submit\" type=\"submit\" value=\"SUBMIT\" [disabled]=\"loginForm.invalid\"></div>\n    </form>\n</body>\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}