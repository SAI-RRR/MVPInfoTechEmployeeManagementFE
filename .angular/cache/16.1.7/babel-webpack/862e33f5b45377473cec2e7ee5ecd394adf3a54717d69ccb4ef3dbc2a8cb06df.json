{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class AuthGuard {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.userInfo = new BehaviorSubject(null);\n    this.jwtHelper = new JwtHelperService();\n    this.isUserValid = false;\n  }\n  setToken() {\n    const sampleJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlRlc3QiLCJzdWIiOjIsImlhdCI6MTYwNDMwOTc0OSwiZXhwIjoxNjA0MzA5ODA5fQ.jHez9kegJ7GT1AO5A2fQp6Dg9A6PBmeiDW1YPaCQoYs\";\n    return of(sampleJWT).pipe(map(token => {\n      if (!token) {\n        return false;\n      }\n      localStorage.setItem(\"access_token\", token);\n      const decodedUser = this.jwtHelper.decodeToken(token);\n      this.userInfo.next(decodedUser);\n      return true;\n    }));\n    return of(false);\n  }\n  isLoggedIn() {\n    return localStorage.getItem('access_token') ? true : false;\n  }\n  doLogout() {\n    let removeToken = localStorage.removeItem('access_token');\n    if (removeToken == null) {\n      this.router.navigate(['login']);\n      this.isUserValid = false;\n    }\n  }\n  canActivate(route, state) {\n    return this.isLoggedIn();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","of","map","JwtHelperService","AuthGuard","constructor","router","http","userInfo","jwtHelper","isUserValid","setToken","sampleJWT","pipe","token","localStorage","setItem","decodedUser","decodeToken","next","isLoggedIn","getItem","doLogout","removeToken","removeItem","navigate","canActivate","route","state","i0","ɵɵinject","i1","Router","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\MVP\\src\\app\\services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot , RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BehaviorSubject, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n\n  userInfo = new BehaviorSubject(null);\n  jwtHelper = new JwtHelperService();\n\n  constructor( private router: Router, private http: HttpClient){}\n    \nisUserValid : boolean=false;\n \nsetToken():Observable<boolean>{\n  \n   const sampleJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlRlc3QiLCJzdWIiOjIsImlhdCI6MTYwNDMwOTc0OSwiZXhwIjoxNjA0MzA5ODA5fQ.jHez9kegJ7GT1AO5A2fQp6Dg9A6PBmeiDW1YPaCQoYs\";\n \n   return of(sampleJWT).pipe(\n   map((token) => {\n\tif(!token){\n\t\treturn false;\n\t}\n\tlocalStorage.setItem(\"access_token\", token);\n\tconst decodedUser = this.jwtHelper.decodeToken(token);\n\tthis.userInfo.next(decodedUser);\n\treturn true;\n   }));\n\n  return of(false);\n}\n\n  isLoggedIn() : boolean{\n      return localStorage.getItem('access_token')? true:false;\n  }\n  \n  doLogout() {\n      let removeToken = localStorage.removeItem('access_token');\n      if (removeToken == null) {\n        this.router.navigate(['login']);\n        this.isUserValid=false\n      }\n    }\n\n  canActivate(\n    route : ActivatedRouteSnapshot,\n    state : RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree{\n      return this.isLoggedIn();\n    }\n}\n"],"mappings":"AAKA,SAASA,eAAe,EAAEC,EAAE,QAAQ,MAAM;AAC1C,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,gBAAgB,QAAQ,oBAAoB;;;;AAMrD,OAAM,MAAOC,SAAS;EAKpBC,YAAqBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAHjD,KAAAC,QAAQ,GAAG,IAAIR,eAAe,CAAC,IAAI,CAAC;IACpC,KAAAS,SAAS,GAAG,IAAIN,gBAAgB,EAAE;IAIpC,KAAAO,WAAW,GAAW,KAAK;EAFsC;EAIjEC,QAAQA,CAAA;IAEL,MAAMC,SAAS,GAAG,qKAAqK;IAEvL,OAAOX,EAAE,CAACW,SAAS,CAAC,CAACC,IAAI,CACzBX,GAAG,CAAEY,KAAK,IAAI;MAChB,IAAG,CAACA,KAAK,EAAC;QACT,OAAO,KAAK;;MAEbC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,KAAK,CAAC;MAC3C,MAAMG,WAAW,GAAG,IAAI,CAACR,SAAS,CAACS,WAAW,CAACJ,KAAK,CAAC;MACrD,IAAI,CAACN,QAAQ,CAACW,IAAI,CAACF,WAAW,CAAC;MAC/B,OAAO,IAAI;IACT,CAAC,CAAC,CAAC;IAEJ,OAAOhB,EAAE,CAAC,KAAK,CAAC;EAClB;EAEEmB,UAAUA,CAAA;IACN,OAAOL,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC,GAAE,IAAI,GAAC,KAAK;EAC3D;EAEAC,QAAQA,CAAA;IACJ,IAAIC,WAAW,GAAGR,YAAY,CAACS,UAAU,CAAC,cAAc,CAAC;IACzD,IAAID,WAAW,IAAI,IAAI,EAAE;MACvB,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,IAAI,CAACf,WAAW,GAAC,KAAK;;EAE1B;EAEFgB,WAAWA,CACTC,KAA8B,EAC9BC,KAA2B;IACzB,OAAO,IAAI,CAACR,UAAU,EAAE;EAC1B;;AA3CShB,SAAS,C;mBAATA,SAAS,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAT9B,SAAS,C;SAATA,SAAS;EAAA+B,OAAA,EAAT/B,SAAS,CAAAgC,IAAA;EAAAC,UAAA,EAHR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}