{"ast":null,"code":"import { BehaviorSubject, map, of } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginuserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.userInfo = new BehaviorSubject(null);\n    this.jwtHelper = new JwtHelperService();\n    this.baseUrl = \"http://localhost:8081/user/login\";\n  }\n  loginUser(user, login) {\n    this.httpClient.post(`${this.baseUrl}`, user);\n    if (login && login.userId && login.password) {\n      const sampleJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlRlc3QiLCJzdWIiOjIsImlhdCI6MTYwNDMwOTc0OSwiZXhwIjoxNjA0MzA5ODA5fQ.jHez9kegJ7GT1AO5A2fQp6Dg9A6PBmeiDW1YPaCQoYs\";\n      return of(sampleJWT).pipe(map(token => {\n        if (!token) {\n          return false;\n        }\n        localStorage.setItem(\"access_token\", token);\n        const decodedUser = this.jwtHelper.decodeToken(token);\n        this.userInfo.next(decodedUser);\n        return true;\n      }));\n    }\n    return of(false);\n  }\n}\nLoginuserService.ɵfac = function LoginuserService_Factory(t) {\n  return new (t || LoginuserService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginuserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginuserService,\n  factory: LoginuserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","map","of","JwtHelperService","LoginuserService","constructor","httpClient","userInfo","jwtHelper","baseUrl","loginUser","user","login","post","userId","password","sampleJWT","pipe","token","localStorage","setItem","decodedUser","decodeToken","next","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\MVP\\src\\app\\loginuser.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { BehaviorSubject, Observable, map, of } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginuserService {\n\n  userInfo = new BehaviorSubject(null);\n  jwtHelper = new JwtHelperService();\n\n\n  private baseUrl=\"http://localhost:8081/user/login\"\n  constructor(private httpClient : HttpClient) { }\n    loginUser(user : User, login:any):Observable<boolean>{\n      this.httpClient.post(`${this.baseUrl}`,user);\n      if(login &&\n        login.userId &&\n        login.password){\n         const sampleJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlRlc3QiLCJzdWIiOjIsImlhdCI6MTYwNDMwOTc0OSwiZXhwIjoxNjA0MzA5ODA5fQ.jHez9kegJ7GT1AO5A2fQp6Dg9A6PBmeiDW1YPaCQoYs\";\n       \n         return of(sampleJWT).pipe(\n         map((token) => {\n        if(!token){\n          return false;\n        }\n        localStorage.setItem(\"access_token\", token);\n        const decodedUser = this.jwtHelper.decodeToken(token);\n        this.userInfo.next(decodedUser);\n        return true;\n         }));\n        }\n        return of(false);\n    }\n\n}\n"],"mappings":"AAGA,SAASA,eAAe,EAAcC,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAC3D,SAASC,gBAAgB,QAAQ,oBAAoB;;;AAKrD,OAAM,MAAOC,gBAAgB;EAO3BC,YAAoBC,UAAuB;IAAvB,KAAAA,UAAU,GAAVA,UAAU;IAL9B,KAAAC,QAAQ,GAAG,IAAIP,eAAe,CAAC,IAAI,CAAC;IACpC,KAAAQ,SAAS,GAAG,IAAIL,gBAAgB,EAAE;IAG1B,KAAAM,OAAO,GAAC,kCAAkC;EACH;EAC7CC,SAASA,CAACC,IAAW,EAAEC,KAAS;IAC9B,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACJ,OAAO,EAAE,EAACE,IAAI,CAAC;IAC5C,IAAGC,KAAK,IACNA,KAAK,CAACE,MAAM,IACZF,KAAK,CAACG,QAAQ,EAAC;MACd,MAAMC,SAAS,GAAG,qKAAqK;MAEvL,OAAOd,EAAE,CAACc,SAAS,CAAC,CAACC,IAAI,CACzBhB,GAAG,CAAEiB,KAAK,IAAI;QACf,IAAG,CAACA,KAAK,EAAC;UACR,OAAO,KAAK;;QAEdC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,KAAK,CAAC;QAC3C,MAAMG,WAAW,GAAG,IAAI,CAACb,SAAS,CAACc,WAAW,CAACJ,KAAK,CAAC;QACrD,IAAI,CAACX,QAAQ,CAACgB,IAAI,CAACF,WAAW,CAAC;QAC/B,OAAO,IAAI;MACV,CAAC,CAAC,CAAC;;IAEJ,OAAOnB,EAAE,CAAC,KAAK,CAAC;EACpB;;AA3BSE,gBAAgB,C;mBAAhBA,gBAAgB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBvB,gBAAgB,C;SAAhBA,gBAAgB;EAAAwB,OAAA,EAAhBxB,gBAAgB,CAAAyB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}