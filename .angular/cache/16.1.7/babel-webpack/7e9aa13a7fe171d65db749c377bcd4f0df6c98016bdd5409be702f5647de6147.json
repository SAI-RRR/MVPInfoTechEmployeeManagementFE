{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction LoginComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_4_div_1_Template, 2, 0, \"div\", 3);\n    i0.ɵɵtemplate(2, LoginComponent_div_4_div_2_Template, 2, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_8_div_1_Template, 2, 0, \"div\", 3);\n    i0.ɵɵtemplate(2, LoginComponent_div_8_div_2_Template, 2, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nexport class LoginComponent {}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSumit\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"box\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"box\"], [\"id\", \"submit\", \"type\", \"submit\", \"value\", \"SUBMIT\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSumit\", function LoginComponent_Template_form_ngSumit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Email ID :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Password :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 2, \"div\", 3);\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"body[_ngcontent-%COMP%], .login[_ngcontent-%COMP%]{\\n    align-items: center;\\n    border: 0;\\n    \\n}\\n.login[_ngcontent-%COMP%]{\\nborder: 0px solid; \\nmargin-left: 30%; \\nmargin-right: 30%; \\nbackground-color: rgb(242, 196, 111); \\npadding: 20px; \\nfont-size: larger;\\n}\\n.box[_ngcontent-%COMP%]{\\n font-family:'Courier New', Courier, monospace;\\n letter-spacing: 1px; \\n}\\n#submit[_ngcontent-%COMP%]{\\nfloat: left;\\nbackground-color: rgb(242, 196, 111);\\n font-style: oblique; \\n font-weight: bolder;\\n margin-left: 30%;\\n width: 40%;\\n height: 8%;\\n border:0px solid;\\n cursor: pointer;\\n padding: 1%;\\n}\\n#submit[_ngcontent-%COMP%]:hover{\\ncolor: green;\\nbackground-color: orange;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsU0FBUzs7QUFFYjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGdCQUFnQjtBQUNoQixpQkFBaUI7QUFDakIsb0NBQW9DO0FBQ3BDLGFBQWE7QUFDYixpQkFBaUI7QUFDakI7QUFDQTtDQUNDLDZDQUE2QztDQUM3QyxtQkFBbUI7QUFDcEI7QUFDQTtBQUNBLFdBQVc7QUFDWCxvQ0FBb0M7Q0FDbkMsbUJBQW1CO0NBQ25CLG1CQUFtQjtDQUNuQixnQkFBZ0I7Q0FDaEIsVUFBVTtDQUNWLFVBQVU7Q0FDVixnQkFBZ0I7Q0FDaEIsZUFBZTtDQUNmLFdBQVc7QUFDWjtBQUNBO0FBQ0EsWUFBWTtBQUNaLHdCQUF3QjtBQUN4QiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5ib2R5ICwgLmxvZ2lue1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIFxyXG59XHJcbi5sb2dpbntcclxuYm9yZGVyOiAwcHggc29saWQ7IFxyXG5tYXJnaW4tbGVmdDogMzAlOyBcclxubWFyZ2luLXJpZ2h0OiAzMCU7IFxyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQyLCAxOTYsIDExMSk7IFxyXG5wYWRkaW5nOiAyMHB4OyBcclxuZm9udC1zaXplOiBsYXJnZXI7XHJcbn1cclxuLmJveHtcclxuIGZvbnQtZmFtaWx5OidDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTtcclxuIGxldHRlci1zcGFjaW5nOiAxcHg7IFxyXG59XHJcbiNzdWJtaXR7XHJcbmZsb2F0OiBsZWZ0O1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQyLCAxOTYsIDExMSk7XHJcbiBmb250LXN0eWxlOiBvYmxpcXVlOyBcclxuIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbiBtYXJnaW4tbGVmdDogMzAlO1xyXG4gd2lkdGg6IDQwJTtcclxuIGhlaWdodDogOCU7XHJcbiBib3JkZXI6MHB4IHNvbGlkO1xyXG4gY3Vyc29yOiBwb2ludGVyO1xyXG4gcGFkZGluZzogMSU7XHJcbn1cclxuI3N1Ym1pdDpob3ZlcntcclxuY29sb3I6IGdyZWVuO1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\n{\n  email: new FormControl('', [Validators.required, Validators.email]), passsword;\n  new FormControl('', Validators.required);\n}\n;\nonsubmit();\n{\n  if (this.loginForm.valid) {\n    console.log(this.loginForm.value);\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_4_div_1_Template","LoginComponent_div_4_div_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","loginForm","get","errors","tmp_1_0","LoginComponent_div_8_div_1_Template","LoginComponent_div_8_div_2_Template","ctx_r1","LoginComponent","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSumit_0_listener","onSubmit","ɵɵelement","LoginComponent_div_4_Template","LoginComponent_div_8_Template","invalid","touched","tmp_2_0","email","FormControl","Validators","required","passsword","onsubmit","valid","console","log","value"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.ts","C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  loginForm!: FormGroup({\n    email: new FormControl('',[Validators.required,Validators.email]),\n    passsword: new FormControl('',Validators.required)\n  });\n}\nonsubmit(){\n  if(this.loginForm.valid){\n    console.log(this.loginForm.value);\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSumit)=\"onSubmit()\">\n    <label for=\"email\">Email ID :</label>  \n    <input type =\"email\" id=\"email\" formControlName=\"email\" class=\"box\" placeholder=\"Email\">\n    <div *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n        <div *ngIf=\"loginForm.get('email')?.errors?.['required']\">Email is required</div>\n        <div *ngIf=\"loginForm.get('email')?.errors?.['email']\">Invalid email format</div>\n    </div>\n    <label for=\"password\">Password :</label> \n    <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"box\" placeholder=\"Password\">\n    <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n        <div *ngIf=\"loginForm.get('password')?.errors?.['required']\">Password is required</div>\n        <div *ngIf=\"loginForm.get('email')?.errors?.['email']\">Invalid email format</div>\n    </div>\n    <button id=\"submit\" type=\"submit\" value=\"SUBMIT\" [disabled]=\"loginForm.invalid\">Login</button>\n    </form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}