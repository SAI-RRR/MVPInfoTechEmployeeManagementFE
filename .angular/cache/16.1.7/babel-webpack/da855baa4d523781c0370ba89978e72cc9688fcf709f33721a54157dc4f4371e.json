{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction DocumentsComponent_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.imgURL, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class DocumentsComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.title = 'multipart-udith';\n    this.baseurl = \"http://localhost:8081/check/upload\";\n  }\n  onFileChanged(event) {\n    console.log(event);\n    this.selectedFile = event.target.files[0];\n    let reader = new FileReader();\n    reader.readAsDataURL(event.target.files[0]);\n    reader.onload = event2 => {\n      this.imgURL = reader.result;\n    };\n  }\n  onUpload() {\n    const uploadData = new FormData();\n    uploadData.append('myFile', this.selectedFile, this.selectedFile.name);\n    this.httpClient.post(this.baseurl, uploadData).subscribe(res => {\n      console.log(res);\n      this.receivedImageData = res;\n      this.base64Data = this.receivedImageData.pic;\n      this.convertedImage = 'data:image.jpeg;base64,' + this.base64Data;\n    }, err => console.log('Error occured during saving:' + err));\n  }\n}\nDocumentsComponent.ɵfac = function DocumentsComponent_Factory(t) {\n  return new (t || DocumentsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nDocumentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentsComponent,\n  selectors: [[\"app-documents\"]],\n  decls: 10,\n  vars: 5,\n  consts: [[\"type\", \"file\", 3, \"change\"], [\"height\", \"200\", 3, \"src\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Upload\", 3, \"click\"], [3, \"src\"], [\"height\", \"200\", 3, \"src\"]],\n  template: function DocumentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Please Upload all your certificates and other documents in .jpeg format\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"input\", 0);\n      i0.ɵɵlistener(\"change\", function DocumentsComponent_Template_input_change_3_listener($event) {\n        return ctx.onFileChanged($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, DocumentsComponent_img_4_Template, 1, 1, \"img\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"click\", function DocumentsComponent_Template_input_click_5_listener() {\n        return ctx.onUpload();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"hr\");\n      i0.ɵɵtext(7);\n      i0.ɵɵpipe(8, \"json\");\n      i0.ɵɵelement(9, \"img\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.imgURL);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" Received Image: \", i0.ɵɵpipeBind1(8, 3, ctx.receivedImageData[\"pic\"]), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"src\", ctx.convertedImage, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i2.NgIf, i2.JsonPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","ctx_r0","imgURL","ɵɵsanitizeUrl","DocumentsComponent","constructor","httpClient","title","baseurl","onFileChanged","event","console","log","selectedFile","target","files","reader","FileReader","readAsDataURL","onload","event2","result","onUpload","uploadData","FormData","append","name","post","subscribe","res","receivedImageData","base64Data","pic","convertedImage","err","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","DocumentsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DocumentsComponent_Template_input_change_3_listener","$event","ɵɵtemplate","DocumentsComponent_img_4_Template","DocumentsComponent_Template_input_click_5_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\MVP\\src\\app\\documents\\documents.component.ts","C:\\Users\\MVPINFOTECH\\Angularproject\\MVP\\src\\app\\documents\\documents.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.css']\n})\nexport class DocumentsComponent {\n  constructor( private httpClient : HttpClient){}\n  title = 'multipart-udith';\n\n  public selectedFile:any;\n  public event1: any;\n  imgURL:any;\n  receivedImageData:any;\n  base64Data:any;\n  convertedImage:any;\n  baseurl = \"http://localhost:8081/check/upload\";\n\n  public onFileChanged(event:any){\n    console.log(event)\n    this.selectedFile=event.target.files[0];\n\nlet reader=new FileReader();\nreader.readAsDataURL(event.target.files[0])\nreader.onload=(event2)=>{\n  this.imgURL=reader.result;\n};\n\n  }\n\nonUpload(){\n  const uploadData = new FormData();\n  uploadData.append('myFile',this.selectedFile,this.selectedFile.name);\n  \n  \n  this.httpClient.post(this.baseurl,uploadData)\n  .subscribe(\n    res=>{\n    console.log(res);\n    this.receivedImageData=res;\n    this.base64Data=this.receivedImageData.pic;\n    this.convertedImage='data:image.jpeg;base64,'+this.base64Data;\n  },  \n    err=>console.log('Error occured during saving:' +err)\n  );\n}\n\n}\n","<h3>Please Upload all your certificates and other documents in .jpeg format</h3>\n\n<div>\n\n<input type=\"file\" (change)=\"onFileChanged($event)\">\n\n<img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\">\n\n</div>\n\n<!-- upload image  -->\n\n<input type=\"button\" (click)=\"onUpload()\" value=\"Upload\">\n\n<hr />\n\nReceived Image:\n\n{{ receivedImageData['pic'] | json}}\n\n<img [src]=\"convertedImage\" >"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}