{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../loginuser.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"span\");\n    i0.ɵɵtext(2, \"Email is required!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"span\", 11);\n    i0.ɵɵtext(2, \"Invalid email format!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_11_div_1_Template, 3, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, LoginComponent_div_11_div_2_Template, 3, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"span\");\n    i0.ɵɵtext(2, \"Password is required!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_16_div_1_Template, 3, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(loginUserService, router) {\n    this.loginUserService = loginUserService;\n    this.router = router;\n    this.user = new User();\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    console.log(this.user);\n    this.loginUserService.loginUser(this.user).subscribe(data => {\n      alert(\"Login Successfull!\");\n      this.router.navigateByUrl('home');\n    }, error => alert(\"Incorrect Details!\"));\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginuserService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"align\", \"center\", 1, \"login\"], [1, \"email\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"userId\", \"name\", \"userId\", \"placeholder\", \"name@example.com\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [1, \"password\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"submit\", \"type\", \"submit\", \"value\", \"SUBMIT\", 3, \"disabled\"], [\"id\", \"ermsg\", 4, \"ngIf\"], [\"id\", \"ermsg\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \" Login to MVP Infotec Pvt Ltd.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\")(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"div\", 2)(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Email ID :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.user.userId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Password :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\");\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.userId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 49:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(23:15) C:\\\\\\\\Users\\\\\\\\MVPINFOTECH\\\\\\\\Angularproject\\\\\\\\Hello\\\\\\\\src\\\\\\\\app\\\\\\\\login\\\\\\\\login.component.css Missed semicolon\\\\n\\\\n \\\\u001b[90m 21 | \\\\u001b[39m margin\\\\u001b[33m:\\\\u001b[39m 0.4rem 0\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 22 | \\\\u001b[39m letter-spacing\\\\u001b[33m:\\\\u001b[39m 1px\\\\u001b[33m;\\\\u001b[39m \\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 23 | \\\\u001b[39m color\\\\u001b[33m:\\\\u001b[39mskyblue\\\\n \\\\u001b[90m    | \\\\u001b[39m              \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 24 | \\\\u001b[39m border-bottom\\\\u001b[33m:\\\\u001b[39m 5px, solid, skyblue\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 25 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[49]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_11_div_1_Template","LoginComponent_div_11_div_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","loginForm","get","errors","tmp_1_0","LoginComponent_div_16_div_1_Template","ctx_r1","LoginComponent","constructor","loginUserService","router","user","ngOnInit","email","required","password","onSubmit","console","log","loginUser","subscribe","data","alert","navigateByUrl","error","ɵɵdirectiveInject","i1","LoginuserService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","LoginComponent_Template_input_ngModelChange_10_listener","$event","userId","LoginComponent_div_11_Template","LoginComponent_Template_input_ngModelChange_15_listener","LoginComponent_div_16_Template","ɵɵelement","tmp_2_0","invalid","touched","tmp_4_0"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.ts","C:\\Users\\MVPINFOTECH\\Angularproject\\Hello\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../user';\nimport { LoginuserService } from '../loginuser.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  constructor(private loginUserService : LoginuserService, private router: Router) { }\n  user:User = new User();\n  loginForm!: FormGroup;\n  ngOnInit(){\n    this.loginForm = new FormGroup({\n    email: new FormControl('',[Validators.required,Validators.email]),\n    password: new FormControl('',Validators.required)\n  });\n}\nonSubmit(){\n  console.log(this.user)\n  this.loginUserService.loginUser(this.user).subscribe(data=>{\n    alert(\"Login Successfull!\");\n    this.router.navigateByUrl('home');\n  },error=>alert(\"Incorrect Details!\"));\n}\n}","<html>\n<head> <title> Login to MVP Infotec Pvt Ltd.</title></head>\n<body><form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"login\" align=\"center\">\n    <div class=\"email\"><label for=\"email\">Email ID :</label>  <input type =\"email\" [(ngModel)]=\"user.userId\" formControlName=\"email\" id=\"userId\" name=\"userId\" placeholder=\"name@example.com\">\n    <div *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n        <div id=\"ermsg\" *ngIf=\"loginForm.get('email')?.errors?.['required']\"><span>Email is required!</span></div>\n        <div id=\"ermsg\" *ngIf=\"loginForm.get('email')?.errors?.['email']\"><span id=\"ermsg\">Invalid email format!</span></div>\n    </div></div>\n    <div class=\"password\"><label for=\"password\">Password :</label> <input type=\"password\" [(ngModel)]=\"user.password\"  formControlName=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\">\n    <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n        <div id=\"ermsg\" *ngIf=\"loginForm.get('password')?.errors?.['required']\"><span>Password is required!</span></div>\n    </div></div>\n    <div><input id=\"submit\" type=\"submit\" value=\"SUBMIT\" [disabled]=\"loginForm.invalid\"></div>\n    </div>\n    </form>\n</body>\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}