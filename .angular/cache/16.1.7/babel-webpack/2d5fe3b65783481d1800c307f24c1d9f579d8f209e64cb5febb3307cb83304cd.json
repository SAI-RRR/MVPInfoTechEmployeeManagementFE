{"ast":null,"code":"import { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { BehaviorSubject, map, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this.userInfo = new BehaviorSubject(null);\n    this.jwtHelper = new JwtHelperService();\n  }\n  setToken() {\n    const sampleJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlRlc3QiLCJzdWIiOjIsImlhdCI6MTYwNDMwOTc0OSwiZXhwIjoxNjA0MzA5ODA5fQ.jHez9kegJ7GT1AO5A2fQp6Dg9A6PBmeiDW1YPaCQoYs\";\n    return of(sampleJWT).pipe(map(token => {\n      if (!token) {\n        return false;\n      }\n      localStorage.setItem(\"access_token\", token);\n      const decodedUser = this.jwtHelper.decodeToken(token);\n      this.userInfo.next(decodedUser);\n      return true;\n    }));\n  }\n  isLoggedIn() {\n    return localStorage.getItem('access_token') ? true : false;\n  }\n  doLogout() {\n    let removeToken = localStorage.removeItem('access_token');\n    if (removeToken == null) {\n      this.router.navigate(['login']);\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["JwtHelperService","BehaviorSubject","map","of","AuthService","constructor","router","userInfo","jwtHelper","setToken","sampleJWT","pipe","token","localStorage","setItem","decodedUser","decodeToken","next","isLoggedIn","getItem","doLogout","removeToken","removeItem","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MVPINFOTECH\\Angularproject\\MVP\\src\\app\\services\\auth.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { BehaviorSubject, Observable, map, of } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  \r\n  export class AuthService{\r\n\r\nconstructor(private router: Router){}\r\n\r\n\r\nuserInfo = new BehaviorSubject(null);\r\njwtHelper = new JwtHelperService();\r\n\r\nsetToken():Observable<boolean>{\r\n  \r\n    const sampleJWT = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlRlc3QiLCJzdWIiOjIsImlhdCI6MTYwNDMwOTc0OSwiZXhwIjoxNjA0MzA5ODA5fQ.jHez9kegJ7GT1AO5A2fQp6Dg9A6PBmeiDW1YPaCQoYs\";\r\n  \r\n    return of(sampleJWT).pipe(\r\n    map((token) => {\r\n     if(!token){\r\n         return false;\r\n     }\r\n     localStorage.setItem(\"access_token\", token);\r\n     const decodedUser = this.jwtHelper.decodeToken(token);\r\n     this.userInfo.next(decodedUser);\r\n     return true;\r\n    }));\r\n \r\n }\r\n\r\n    isLoggedIn() : boolean{\r\n        return localStorage.getItem('access_token')? true:false;\r\n    }\r\n    \r\n    doLogout() {\r\n        let removeToken = localStorage.removeItem('access_token');\r\n        if (removeToken == null) {\r\n          this.router.navigate(['login']);\r\n        }\r\n      }\r\n\r\n  }\r\n"],"mappings":"AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,eAAe,EAAcC,GAAG,EAAEC,EAAE,QAAQ,MAAM;;;AAMzD,OAAM,MAAOC,WAAW;EAE1BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAG1B,KAAAC,QAAQ,GAAG,IAAIN,eAAe,CAAC,IAAI,CAAC;IACpC,KAAAO,SAAS,GAAG,IAAIR,gBAAgB,EAAE;EAJE;EAMpCS,QAAQA,CAAA;IAEJ,MAAMC,SAAS,GAAG,qKAAqK;IAEvL,OAAOP,EAAE,CAACO,SAAS,CAAC,CAACC,IAAI,CACzBT,GAAG,CAAEU,KAAK,IAAI;MACb,IAAG,CAACA,KAAK,EAAC;QACN,OAAO,KAAK;;MAEhBC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,KAAK,CAAC;MAC3C,MAAMG,WAAW,GAAG,IAAI,CAACP,SAAS,CAACQ,WAAW,CAACJ,KAAK,CAAC;MACrD,IAAI,CAACL,QAAQ,CAACU,IAAI,CAACF,WAAW,CAAC;MAC/B,OAAO,IAAI;IACZ,CAAC,CAAC,CAAC;EAEN;EAEGG,UAAUA,CAAA;IACN,OAAOL,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC,GAAE,IAAI,GAAC,KAAK;EAC3D;EAEAC,QAAQA,CAAA;IACJ,IAAIC,WAAW,GAAGR,YAAY,CAACS,UAAU,CAAC,cAAc,CAAC;IACzD,IAAID,WAAW,IAAI,IAAI,EAAE;MACvB,IAAI,CAACf,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;;AAlCSnB,WAAW,C;mBAAXA,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAXvB,WAAW,C;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}